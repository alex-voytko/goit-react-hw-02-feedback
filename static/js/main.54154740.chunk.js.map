{"version":3,"sources":["components/FeedbackStat.module.css","components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Notification","message","className","notificationText","Statistics","good","neutral","bad","total","positivePercentage","feedbackList","feedback","number","FeedbackOptions","options","onLeaveFeedback","btnCont","onClick","id","btn","Section","title","children","sectionTitle","App","state","handleCount","e","elementById","currentTarget","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","cont","statCont","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,aAAe,mCAAmC,QAAU,8BAA8B,SAAW,+BAA+B,IAAM,0BAA0B,aAAe,mCAAmC,OAAS,6BAA6B,SAAW,+BAA+B,iBAAmB,yC,iJCa9VC,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,8BACI,mBAAGC,UAAWC,mBAAd,SAAiCF,OC6B1BG,EA9BI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,mBAA7B,OACdD,EACY,qBAAIN,UAAWQ,eAAf,UACG,oBAAIR,UAAWS,WAAf,SACI,sCAAQ,sBAAMT,UAAWU,SAAjB,SAA0BP,SAEtC,oBAAIH,UAAWS,WAAf,SACI,yCAAW,sBAAMT,UAAWU,SAAjB,SAA0BN,SAEzC,oBAAIJ,UAAWS,WAAf,SACI,qCAAO,sBAAMT,UAAWU,SAAjB,SAA0BL,SAErC,oBAAIL,UAAWS,WAAf,SACI,uCAAS,sBAAMT,UAAWU,SAAjB,SAA0BJ,SAEvC,oBAAIN,UAAWS,WAAf,SACI,mDAAqB,uBAAMT,UAAWU,SAAjB,UAA0BH,EAA1B,eAf/B,cAAC,EAAD,CAAcR,QAAQ,+BCkCrBY,EApCS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACpB,mCACI,sBAAKb,UAAWc,UAAhB,UACI,wBACIC,QAASF,EAETG,GAAIJ,EAAQ,GACZZ,UAAWiB,MAJf,iBAESL,EAAQ,IAMjB,wBACIG,QAASF,EAETG,GAAIJ,EAAQ,GACZZ,UAAWiB,MAJf,oBAESL,EAAQ,IAMjB,wBACIG,QAASF,EAETG,GAAIJ,EAAQ,GACZZ,UAAWiB,MAJf,gBAESL,EAAQ,UCVdM,EAXC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACZ,qCACI,oBAAIpB,UAAWqB,eAAf,SAA8BF,IACzBC,MC0DEE,E,4MA1DXC,MAAQ,CACJpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAETmB,YAAc,SAAAC,GACV,IAAMC,EAAcD,EAAEE,cAAcX,GACpC,EAAKY,UAAS,SAAAC,GACV,OAAO,eACFH,EAAcG,EAAUH,GAAe,O,EAIpDI,mBAAqB,WACjB,MAA+B,EAAKP,MACpC,OADA,EAAQpB,KAAR,EAAcC,QAAd,EAAuBC,K,EAI3B0B,gCAAkC,WAI9B,OAHeC,KAAKC,MACf,EAAKV,MAAMpB,KAAO,EAAK2B,qBAAwB,M,4CAIxD,WACI,MAA+BI,KAAKX,MAA5BpB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEnByB,EAIAI,KAJAJ,mBACAC,EAGAG,KAHAH,gCACAP,EAEAU,KAFAV,YACAD,EACAW,KADAX,MAEJ,OACI,sBAAKvB,UAAWmC,OAAhB,UACI,qBAAKnC,UAAWoC,WAAhB,SACI,cAAC,EAAD,CAASjB,MAAM,yBAAf,SACI,cAAC,EAAD,CACIP,QAASyB,OAAOC,KAAKf,GACrBV,gBAAiBW,QAI7B,8BACI,cAAC,EAAD,CAASL,MAAM,aAAf,SACI,cAAC,EAAD,CACIhB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,IACPvB,mBAAoBwB,iB,GAlD9BQ,a,MCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.54154740.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"FeedbackStat_cont__KZmIN\",\"sectionTitle\":\"FeedbackStat_sectionTitle__2YZkm\",\"btnCont\":\"FeedbackStat_btnCont__zeQcR\",\"statCont\":\"FeedbackStat_statCont__2zyXi\",\"btn\":\"FeedbackStat_btn__32RGs\",\"feedbackList\":\"FeedbackStat_feedbackList__30buD\",\"number\":\"FeedbackStat_number__3YZIs\",\"feedback\":\"FeedbackStat_feedback__2S6gP\",\"notificationText\":\"FeedbackStat_notificationText__26Cek\"};","import React from 'react';\r\nimport { notificationText } from '../FeedbackStat.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n    <div>\r\n        <p className={notificationText}>{message}</p>\r\n    </div>\r\n);\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {feedbackList,feedback, number} from \"../FeedbackStat.module.css\"\r\nimport Notification from \"../Notification\"\r\n\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage}) => (\r\n    !total ? (<Notification message=\"There are no feedback yet\"/>)\r\n           : (   <ul className={feedbackList}>\r\n                    <li className={feedback}>\r\n                        <p>Good:<span className={number}>{good}</span></p>\r\n                    </li>\r\n                    <li className={feedback}>\r\n                        <p>Neutral:<span className={number}>{neutral}</span></p>\r\n                    </li>\r\n                    <li className={feedback}>\r\n                        <p>Bad:<span className={number}>{bad}</span></p>\r\n                    </li>\r\n                    <li className={feedback}>\r\n                        <p>Total:<span className={number}>{total}</span></p>\r\n                    </li>\r\n                    <li className={feedback}>\r\n                        <p>Positive feedback:<span className={number}>{positivePercentage}%</span></p>\r\n                    </li>\r\n                </ul>)\r\n)\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n}\r\n\r\n\r\nexport default Statistics","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { btnCont, btn } from '../FeedbackStat.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n    <>\r\n        <div className={btnCont}>\r\n            <button\r\n                onClick={onLeaveFeedback}\r\n                key={options[0]}\r\n                id={options[0]}\r\n                className={btn}\r\n            >\r\n                Good\r\n            </button>\r\n            <button\r\n                onClick={onLeaveFeedback}\r\n                key={options[1]}\r\n                id={options[1]}\r\n                className={btn}\r\n            >\r\n                Neutral\r\n            </button>\r\n            <button\r\n                onClick={onLeaveFeedback}\r\n                key={options[2]}\r\n                id={options[2]}\r\n                className={btn}\r\n            >\r\n                Bad\r\n            </button>\r\n        </div>\r\n    </>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {sectionTitle} from \"../FeedbackStat.module.css\"\r\n\r\nconst Section = ({title, children}) => (\r\n    <>\r\n        <h2 className={sectionTitle}>{title}</h2>\r\n            {children}\r\n    </>\r\n)\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.any.isRequired,\r\n}\r\nexport default Section","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport { cont, statCont } from './components/FeedbackStat.module.css';\n\nclass App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n    handleCount = e => {\n        const elementById = e.currentTarget.id;\n        this.setState(prevState => {\n            return {\n                [elementById]: prevState[elementById] + 1,\n            };\n        });\n    };\n    countTotalFeedback = () => {\n        const { good, neutral, bad } = this.state;\n        return good + neutral + bad;\n    };\n\n    countPositiveFeedbackPercentage = () => {\n        const result = Math.round(\n            (this.state.good / this.countTotalFeedback()) * 100,\n        );\n        return result;\n    };\n    render() {\n        const { good, neutral, bad } = this.state;\n        const {\n            countTotalFeedback,\n            countPositiveFeedbackPercentage,\n            handleCount,\n            state,\n        } = this;\n        return (\n            <div className={cont}>\n                <div className={statCont}>\n                    <Section title=\"Please, leave feedback\">\n                        <FeedbackOptions\n                            options={Object.keys(state)}\n                            onLeaveFeedback={handleCount}\n                        />\n                    </Section>\n                </div>\n                <div>\n                    <Section title=\"Statistics\">\n                        <Statistics\n                            good={good}\n                            neutral={neutral}\n                            bad={bad}\n                            total={countTotalFeedback()}\n                            positivePercentage={countPositiveFeedbackPercentage()}\n                        />\n                    </Section>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}